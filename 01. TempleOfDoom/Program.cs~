namespace _01._TempleOfDoom;
class Program
{
    static void Main(string[] args)
    {
        Queue<int> tools = new Queue<int>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));
        Stack<int> substances = new Stack<int>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));
        List<int> challenges = new List<int>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));
        int decrise = 0;

        while (tools.Count>0&&tools.Count>0)
        {
            int toolsHarry = tools.Peek();
            int subHarry = substances.Peek();
            int multiply = toolsHarry * (subHarry-decrise);
            if (challenges.Contains(multiply))
            {
                tools.Dequeue();
                substances.Pop();
                challenges.Remove(multiply);
            }
            else
            {
                tools.Enqueue(tools.Dequeue()+1);
                decrise = 1;
            }
        }
        if (tools.Count>0)
        {
            Console.WriteLine($"Harry is lost in the temple. Oblivion awaits him.");
            Console.WriteLine($"Substances: {string.Join(", ", tools)}");


            if (challenges.Count > 0)
            {
                Console.WriteLine($"Challenges: {string.Join(",", challenges)}");
            }
        }
        else
        {
            Console.WriteLine($"Harry found an ostracon, which is dated to the 6th century BCE.");
            if (substances.Count>0)
            {
                Console.WriteLine($"Substances: {string.Join(", ",substances)}");
            }
            if (challenges.Count>0)
            {
                Console.WriteLine($"Challenges: {string.Join(",",challenges)}");
            }
            
        }

    }
}


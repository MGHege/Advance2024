namespace _02.TheGambler;
class Program
{
    static void Main(string[] args)
    {
        int n = int.Parse(Console.ReadLine());
        char[,] matrix = new char[n, n];
        for (int row = 0; row < matrix.GetLength(0); row++)
        {
            char[] colElement = Console.ReadLine().ToArray();
            for (int col = 0; col < matrix.GetLength(1); col++)
            {
                matrix[row, col] = colElement[col];
            }
        }
        int enteringAmount = 100;
        char startSymbol = 'G';
        int rows = matrix.GetLength(0);
        int cols = matrix.GetLength(1);
        int foundRowIndex = -1;
        int foundColIndex = -1;

        // Find the position of the target symbol
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < cols; j++)
            {
                if (matrix[i, j] == startSymbol)
                {
                    foundRowIndex = i;
                    foundColIndex = j;
                    break; // Assuming you want to find the first occurrence only
                }
            }
        }
        string input;
        while ((input = Console.ReadLine()) != "end")
        {
            if (input=="up")
            {
                if (foundRowIndex<rows-1&&foundRowIndex!=-1)
                {

                }
            }
            else if (input == "down")
            {
                if (foundRowIndex < rows - 1 && foundRowIndex != 1)
                {

                }
            }
            else if (input == "left")
            {

            }
            else if (input == "right")
            {

            }
        }
    }
}


Check if the symbol is found
if (foundRowIndex != -1) {
    // Check and move in all four directions
    MoveInDirection(matrix, targetSymbol, foundRowIndex - 1, foundColIndex, "up");
MoveInDirection(matrix, targetSymbol, foundRowIndex + 1, foundColIndex, "down");
MoveInDirection(matrix, targetSymbol, foundRowIndex, foundColIndex - 1, "left");
MoveInDirection(matrix, targetSymbol, foundRowIndex, foundColIndex + 1, "right");
} else
{
    Console.WriteLine("Symbol not found.");
}

// Function to move in a specific direction and check boundaries
void MoveInDirection(char[,] matrix, char targetSymbol, int newRow, int newCol, string direction)
{
    int rows = matrix.GetLength(0);
    int cols = matrix.GetLength(1);

    if (newRow >= 0 && newRow < rows && newCol >= 0 && newCol < cols)
    {
        char newSymbol = matrix[newRow, newCol];
        Console.WriteLine($"Symbol '{newSymbol}' found {direction} from '{targetSymbol}'.");
    }
    else
    {
        Console.WriteLine($"Symbol found, but moving {direction} is out of range.");
    }
}